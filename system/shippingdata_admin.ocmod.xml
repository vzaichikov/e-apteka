<?xml version="1.0" encoding="utf-8"?>
	<modification>
		<name>Shipping Data Admin</name>
		<code>SD Admin</code>
		<version>1.3.0</version>
		<author>Prorab337</author>
		<link>https://oc-max.com</link>

		<file path="admin/controller/sale/order.php">
			<operation>
				<search><![CDATA[$data['button_invoice_print']]]></search>
				<add position="before"><![CDATA[
					/* START Shipping Data */
					$data['heading_cn'] 	 = $this->language->get('heading_cn');
					$data['entry_cn_number'] = $this->language->get('entry_cn_number');
					/* END Shipping Data */
				]]></add>
			</operation>
			<operation>
				<search><![CDATA[public function getForm(]]></search>
				<add position="before"><![CDATA[
					/* START Shipping Data */
					public function getShippingData() {
						$this->load->language('sale/order');

						$data = array();

						if (!empty($this->request->post['selected']) && $this->validate()) {
							$shipping_methods = array('novaposhta', 'ukrposhta');

							$settings = array();

							foreach ($shipping_methods as $shipping_method) {
								if ($this->config->get($shipping_method . '_status')) {
									$settings[$shipping_method] = $this->config->get($shipping_method);

									$data['shipping_methods'][$shipping_method]['heading'] = $this->language->get('heading_cn_' . $shipping_method);

									$data['shipping_methods'][$shipping_method]['cn_list'] = array (
										'text' => $this->language->get('text_cn_list'),
										'href' => $this->url->link('extension/shipping/' . $shipping_method . '/getCNList', 'token=' . $this->session->data['token'], 'SSL')
									);
								} else {
									unset($shipping_methods[$shipping_method]);
								}
							}

							$this->load->model('sale/order');

							$orders = $this->model_sale_order->getOrdersShippingData($this->request->post['selected']);

							foreach ($orders as $order) {
								foreach ($shipping_methods as $shipping_method) {
									if (!empty($settings[$shipping_method]['compatible_shipping_method']) && (empty($order['shipping_code']) || in_array($order['shipping_code'], $settings[$shipping_method]['compatible_shipping_method']) || in_array(stristr($order['shipping_code'], '.', true), $settings[$shipping_method]['compatible_shipping_method']))) {
										if ($order[$shipping_method . '_cn_number']) {
											unset($data['orders'][$order['order_id']]);

											if ($settings[$shipping_method]['consignment_edit']) {
												if ($settings[$shipping_method]['consignment_edit_text'][$this->config->get('config_language_id')]) {
													$text = $settings[$shipping_method]['consignment_edit_text'][$this->config->get('config_language_id')];
												} else {
													$text = $this->language->get('text_cn_edit');
												}

												if ($shipping_method == 'novaposhta') {
													$cn_id = '&cn_ref=' . $order['novaposhta_cn_ref'];
												} elseif ($shipping_method == 'ukrposhta') {
													$cn_id = '&cn_uuid=' . $order['ukrposhta_cn_uuid'];
												} else {
													$cn_id = '';
												}

												$data['orders'][$order['order_id']][$shipping_method]['edit'] = array(
													'text' => $text,
													'href' => $this->url->link('extension/shipping/' . $shipping_method . '/getCNForm', 'order_id=' . $order['order_id'] . '&token=' . $this->session->data['token'] . $cn_id, 'SSL')
												);
											}

											if ($settings[$shipping_method]['consignment_delete']) {
												if ($settings[$shipping_method]['consignment_delete_text'][$this->config->get('config_language_id')]) {
													$text = $settings[$shipping_method]['consignment_delete_text'][$this->config->get('config_language_id')];
												} else {
													$text = $this->language->get('text_cn_delete');
												}

												$data['orders'][$order['order_id']][$shipping_method]['delete'] = array(
													'text' => $text,
													'href' => ''
												);
											}

											break;
										} else {
											if ($settings[$shipping_method]['consignment_create']) {
												if ($settings[$shipping_method]['consignment_create_text'][$this->config->get('config_language_id')]) {
													$text = $settings[$shipping_method]['consignment_create_text'][$this->config->get('config_language_id')];
												} else {
													$text = $this->language->get('text_cn_create');
												}

												$data['orders'][$order['order_id']][$shipping_method]['create'] = array(
													'text' => $text,
													'href' => $this->url->link('extension/shipping/' . $shipping_method . '/getCNForm', 'order_id=' . $order['order_id'] . '&token=' . $this->session->data['token'], 'SSL')
												);
											}

											if ($settings[$shipping_method]['consignment_assignment_to_order']) {
												if ($settings[$shipping_method]['consignment_assignment_to_order_text'][$this->config->get('config_language_id')]) {
													$text = $settings[$shipping_method]['consignment_assignment_to_order_text'][$this->config->get('config_language_id')];
												} else {
													$text = $this->language->get('text_cn_assignment');
												}

												$data['orders'][$order['order_id']][$shipping_method]['assignment'] = array(
													'text' => $text,
													'href' => ''
												);
											}
										}
									}
								}
							}

							$data['heading_cn'] = $this->language->get('heading_cn');
							$data['text_cn_list'] = $this->language->get('text_cn_list');

							$data['entry_cn_number'] = $this->language->get('entry_cn_number');
						}

						if (!empty($this->error['warning'])) {
							$data['error'] = $this->error['warning'];
						}

						$this->response->addHeader('Content-Type: application/json');
						$this->response->setOutput(json_encode($data));
					}
					/* END Shipping Data */
				]]></add>
			</operation>
		</file>

		<file path="admin/model/sale/order.php">
			<operation>
				<search><![CDATA[public function getOrderProducts(]]></search>
				<add position="before"><![CDATA[
					/* START Shipping Data */
					public function getOrdersShippingData($data = array()) {
						$query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order` WHERE `order_id` IN (" . implode(',', $data) . ")");

						return $query->rows;
					}
					/* END Shipping Data */
				]]></add>
			</operation>
		</file>

		<file path="admin/language/en-gb/sale/order.php">
			<operation>
				<search><![CDATA[// Text]]></search>
				<add position="before"><![CDATA[
					/* START Shipping Data */
					$_['heading_cn'] 			= 'Consignment note';
					$_['heading_cn_novaposhta'] = 'Nova Poshta';
					$_['heading_cn_ukrposhta']  = 'Ukrposhta';

					$_['entry_cn_number'] 		= 'Consignment note number';

					$_['text_cn_list'] 			= 'Consignment note list';
					$_['text_cn_create'] 		= 'Create';
					$_['text_cn_edit'] 			= 'Edit';
					$_['text_cn_delete'] 		= 'Delete';
					$_['text_cn_assignment']  	= 'Assignment number';
					/* END Shipping Data */
				]]></add>
			</operation>
		</file>

		<file path="admin/language/ru-ru/sale/order.php">
			<operation>
				<search><![CDATA[// Text]]></search>
				<add position="before"><![CDATA[
					/* START Shipping Data */
					$_['heading_cn'] 			= 'Товаро-транспортная накладная';
					$_['heading_cn_novaposhta'] = 'Новая Почта';
					$_['heading_cn_ukrposhta']  = 'Укрпочта';

					$_['entry_cn_number'] 		= 'Номер накладной';

					$_['text_cn_list'] 			= 'Список накладных';
					$_['text_cn_create'] 		= 'Создать';
					$_['text_cn_edit'] 			= 'Редактировать';
					$_['text_cn_delete'] 		= 'Удалить';
					$_['text_cn_assignment']    = 'Присвоить номер';
					/* END Shipping Data */
				]]></add>
			</operation>
		</file>

		<file path="admin/language/uk-ua/sale/order.php">
			<operation>
				<search><![CDATA[// Text]]></search>
				<add position="before"><![CDATA[
					/* START Shipping Data */
					$_['heading_cn'] 			= 'Товарно-транспортна накладна';
					$_['heading_cn_novaposhta'] = 'Нова Пошта';
					$_['heading_cn_ukrposhta']  = 'Укрпошта';

					$_['entry_cn_number'] 		= 'Номер накладної';

					$_['text_cn_list'] 			= 'Список накладних';
					$_['text_cn_create'] 		= 'Створити';
					$_['text_cn_edit'] 			= 'Редагувати';
					$_['text_cn_delete'] 		= 'Видалити';
					$_['text_cn_assignment']  	= 'Присвоїти номер';
					/* END Shipping Data */
				]]></add>
			</operation>
		</file>

  		<file path="admin/view/template/sale/order_list.tpl|admin/view/template/sale/orderpro_list.tpl">
    		<operation>
    			<search><![CDATA[<?php echo $footer; ?>]]></search>
    			<add position="before"><![CDATA[
					<!-- START Shipping Data -->
					<style>
						.btn-novaposhta {
							color: #333;
							background-color: #ff392e;
							border-color: #ccc;
						}
						.btn-light-novaposhta {
							color: #333;
							background-color: #fff;
							border-color: #ff392e;
						}
						.btn-ukrposhta {
							color: #333;
							background-color: #ffce2f;
							border-color: #ccc;
						}
						.btn-light-ukrposhta {
							color: #333;
							background-color: #fff;
							border-color: #ffce2f;
						}
					</style>
					<!-- START Modal assignment CN to order -->
					<div class="modal fade" id="assignment-cn-to-order" tabindex="-1" role="dialog" aria-labelledby="assignment-cn-to-order-label">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									<h4 class="modal-title" id="assignment-cn-to-order-label"><?php echo $heading_cn; ?></h4>
								</div>
								<div class="modal-body">
									<div class="form-group clearfix">
										<input type="hidden" name="cn_order_id" value="" id="cn_order_id" />
										<input type="hidden" name="cn_shipping_method" value="" id="cn_shipping_method" />
										<label class="col-sm-2 control-label" for="cn_number"><?php echo $entry_cn_number; ?></label>
										<div class="col-sm-10">
											<input type="text" name="cn_number" value="" placeholder="<?php echo $entry_cn_number; ?>" id="cn_number" class="form-control" />
										</div>
									</div>
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-primary" onclick="assignmentCN();"><i class="fa fa-check"></i></button>
									<button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i></button>
								</div>
							</div>
						</div>
					</div>
					<!-- END Modal assignment CN to order -->

					<script type="text/javascript"><!--
						function deleteCN(self, shipping_method) {
							var post_data = 'order_id=' + $(self).parents('tr').find('input[name^="selected"]').val();

							$.ajax( {
								url: 'index.php?route=extension/shipping/' + shipping_method + '/deleteCNFromOrder&token=<?php echo $token; ?>',
								type: 'POST',
								data: post_data,
								dataType: 'json',
								beforeSend: function () {
									$('body').fadeTo('fast', 0.7).prepend('<div id="ocmax-loader" style="position: fixed; top: 50%;	left: 50%; z-index: 9999;"><i class="fa fa-spinner fa-spin fa-3x fa-fw"></i></div>');
								},
								complete: function () {
									var $alerts = $('.alert-danger, .alert-success');

									if ($alerts.length !== 0) {
										setTimeout(function() { $alerts.fadeOut() }, 5000);
									}

									$('body').fadeTo('fast', 1)
									$('#ocmax-loader').remove();
								},
								success: function(json) {
									if(json['error']) {
										$('.container-fluid:eq(1)').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
									}

									if (json['success']) {
										$('.container-fluid:eq(1)').prepend('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

										setTimeout(function() {
												location.reload();
											},
											2000
										);
									}

									$('html, body').animate({ scrollTop: 0 }, 'slow');
								},
								error: function (jqXHR, textStatus, errorThrown) {
									console.log(textStatus);
								}
							} );
						}

						function assignmentCN(self, shipping_method) {
							if (typeof(self) !== 'undefined') {
								$('#cn_order_id').val($(self).parents('tr').find('input[name^="selected"]').val());
							}

							if (shipping_method) {
								$('#cn_shipping_method').val(shipping_method);
							}

							if ($('#assignment-cn-to-order').is(':hidden')) {
								$('#assignment-cn-to-order').modal('show');
							} else {
								var post_data = 'order_id=' + $('#cn_order_id').val() + '&cn_number=' + $('#cn_number').val();

								$.ajax( {
									url: 'index.php?route=extension/shipping/' + $('#cn_shipping_method').val() + '/addCNToOrder&token=<?php echo $token; ?>',
									type: 'POST',
									data: post_data,
									dataType: 'json',
									beforeSend: function () {
										$('body').fadeTo('fast', 0.7).prepend('<div id="ocmax-loader" style="position: fixed; top: 50%;	left: 50%; z-index: 9999;"><i class="fa fa-spinner fa-spin fa-3x fa-fw"></i></div>');
									},
									complete: function () {
										var $alerts = $('.alert-danger, .alert-success');

										if ($alerts.length !== 0) {
											setTimeout(function() { $alerts.fadeOut() }, 5000);
										}

										$('body').fadeTo('fast', 1)
										$('#ocmax-loader').remove();
									},
									success: function(json) {
										if(json['error']) {
											$('.container-fluid:eq(1)').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
										}

										if (json['success']) {
											$('.container-fluid:eq(1)').prepend('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

											setTimeout(function() {
													location.reload();
												},
												2000
											);
										}

										$('html, body').animate({ scrollTop: 0 }, 'slow');
									},
									error: function (jqXHR, textStatus, errorThrown) {
										console.log(textStatus);
									}
								} );

								$('#assignment-cn-to-order').modal('hide');
							}
						}

						$(function() {
							var post_data = $('input[name^="selected"]');

							$.ajax( {
								url: 'index.php?route=sale/order/getShippingData&token=<?php echo $token; ?>',
								type: 'POST',
								data: post_data,
								dataType: 'json',
								success: function(json) {
									if(json['error']) {
										$('.container-fluid:eq(1)').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

										$('html, body').animate({ scrollTop: 0 }, 'slow');
									}

									if (json instanceof Object) {
										if (json['shipping_methods']) {
											var btn_l = '<div class="btn-group"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-list-ul"></i> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right">';

											for (var i in json['shipping_methods']) {
												btn_l += '<li class="dropdown-header">' + json['shipping_methods'][i]['heading'] + '</li>';

												if (json['shipping_methods'][i]['cn_list']) {
													btn_l += '<li><a href="' + json['shipping_methods'][i]['cn_list']['href'] + '">' + json['shipping_methods'][i]['cn_list']['text'] + '</a></li>';
												}

												btn_l += '<li role="separator" class="divider"></li>';
											}

											btn_l += '</ul></div> ';

											$('div.container-fluid div.pull-right:last').prepend(btn_l);
										}

										for (var i in json['orders']) {
											var
												c       = 0,
												f       = false,
												b_class = '',
												btn_o   = '<div class="btn-group"><button type="button" id="button-cn-' + i + '" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-file-text-o" aria-hidden="true"></i> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right">';

											btn_o += '<li class="dropdown-header">' + json['heading_cn'] + '</li>';
											btn_o += '<li role="separator" class="divider"></li>';

											for (var ii in json['orders'][i]) {
												c++;

												btn_o += '<li class="dropdown-header">' + json['shipping_methods'][ii]['heading'] + '</li>';

												if (json['orders'][i][ii]['create']) {
													btn_o += '<li><a href="' + json['orders'][i][ii]['create']['href'] + '">' + json['orders'][i][ii]['create']['text'] + '</a></li>';
												}

												if (json['orders'][i][ii]['edit']) {
													f = true;
													btn_o += '<li><a href="' + json['orders'][i][ii]['edit']['href'] + '">' + json['orders'][i][ii]['edit']['text'] + '</a></li>';
												}

												if (json['orders'][i][ii]['delete']) {
													f = true;
													btn_o += '<li><a style="cursor: pointer;" onclick="deleteCN(this, \'' + ii + '\');">' + json['orders'][i][ii]['delete']['text'] + '</a></li>';
												}

												if (json['orders'][i][ii]['assignment']) {
													btn_o += '<li><a style="cursor: pointer;" onclick="assignmentCN(this, \'' + ii + '\');">' + json['orders'][i][ii]['assignment']['text'] + '</a></li>';
												}

												btn_o += '<li role="separator" class="divider"></li>';

												if (f) {
													b_class = 'btn-' + ii;

													continue;
												} else {
													b_class = 'btn-light-' + ii;
												}
											}

											btn_o += '</ul></div> ';

											$('input[value="' + i + '"]').parents('tr').find('td:last').prepend(btn_o);

											if (c != 1) {
												if (f) {
													b_class = 'btn-info';
												} else {
													b_class = 'btn-default';
												}
											}

											$('input[value="' + i + '"]').parents('tr').find('[id^="button-cn"]').addClass(b_class);
										}
									}
								},
								error: function (jqXHR, textStatus, errorThrown) {
									console.log(textStatus);
								}
							} );
						} );
					//--></script>
					<!-- END Shipping Data -->
    			]]></add>
    		</operation>
  		</file>

		<file path="admin/view/template/sale/order_info.tpl">
			<operation>
				<search><![CDATA[<?php echo $footer; ?>]]></search>
				<add position="before"><![CDATA[
					<!-- START Shipping Data -->
					<style>
						.btn-novaposhta {
							color: #333;
							background-color: #ff392e;
							border-color: #ccc;
						}
						.btn-light-novaposhta {
							color: #333;
							background-color: #fff;
							border-color: #ff392e;
						}
						.btn-ukrposhta {
							color: #333;
							background-color: #ffce2f;
							border-color: #ccc;
						}
						.btn-light-ukrposhta {
							color: #333;
							background-color: #fff;
							border-color: #ffce2f;
						}
					</style>
					<!-- START Modal assignment CN to order -->
					<div class="modal fade" id="assignment-cn-to-order" tabindex="-1" role="dialog" aria-labelledby="assignment-cn-to-order-label">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									<h4 class="modal-title" id="assignment-cn-to-order-label"><?php echo $heading_cn; ?></h4>
								</div>
								<div class="modal-body">
									<div class="form-group clearfix">
										<input type="hidden" name="cn_shipping_method" value="" id="cn_shipping_method" />
										<label class="col-sm-2 control-label" for="cn_number"><?php echo $entry_cn_number; ?></label>
										<div class="col-sm-10">
											<input type="text" name="cn_number" value="" placeholder="<?php echo $entry_cn_number; ?>" id="cn_number" class="form-control" />
										</div>
									</div>
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-primary" onclick="assignmentCN();"><i class="fa fa-check"></i></button>
									<button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i></button>
								</div>
							</div>
						</div>
					</div>
					<!-- END Modal assignment CN to order -->

					<script type="text/javascript"><!--
						function deleteCN(shipping_method) {
							var post_data = 'order_id=<?php echo $order_id; ?>';

							$.ajax( {
								url: 'index.php?route=extension/shipping/' + shipping_method + '/deleteCNFromOrder&token=<?php echo $token; ?>',
								type: 'POST',
								data: post_data,
								dataType: 'json',
								beforeSend: function () {
									$('body').fadeTo('fast', 0.7).prepend('<div id="ocmax-loader" style="position: fixed; top: 50%;	left: 50%; z-index: 9999;"><i class="fa fa-spinner fa-spin fa-3x fa-fw"></i></div>');
								},
								complete: function () {
									var $alerts = $('.alert-danger, .alert-success');

									if ($alerts.length !== 0) {
										setTimeout(function() { $alerts.fadeOut() }, 5000);
									}

									$('body').fadeTo('fast', 1)
									$('#ocmax-loader').remove();
								},
								success: function(json) {
									if(json['error']) {
										$('.container-fluid:eq(1)').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
									}

									if (json['success']) {
										$('.container-fluid:eq(1)').prepend('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

										setTimeout(function() {
												location.reload();
											},
											2000
										);
									}

									$('html, body').animate({ scrollTop: 0 }, 'slow');
								},
								error: function (jqXHR, textStatus, errorThrown) {
									console.log(textStatus);
								}
							} );
						}

						function assignmentCN(shipping_method) {
							if (shipping_method) {
								$('#cn_shipping_method').val(shipping_method);
							}

							if ($('#assignment-cn-to-order').is(':hidden')) {
								$('#assignment-cn-to-order').modal('show');
							} else {
								var post_data = 'order_id=<?php echo $order_id; ?>&cn_number=' + $('#cn_number').val();

								$.ajax( {
									url: 'index.php?route=extension/shipping/' + $('#cn_shipping_method').val() + '/addCNToOrder&token=<?php echo $token; ?>',
									type: 'POST',
									data: post_data,
									dataType: 'json',
									beforeSend: function () {
										$('body').fadeTo('fast', 0.7).prepend('<div id="ocmax-loader" style="position: fixed; top: 50%;	left: 50%; z-index: 9999;"><i class="fa fa-spinner fa-spin fa-3x fa-fw"></i></div>');
									},
									complete: function () {
										var $alerts = $('.alert-danger, .alert-success');

										if ($alerts.length !== 0) {
											setTimeout(function() { $alerts.fadeOut() }, 5000);
										}

										$('body').fadeTo('fast', 1)
										$('#ocmax-loader').remove();
									},
									success: function(json) {
										if(json['error']) {
											$('.container-fluid:eq(1)').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
										}

										if (json['success']) {
											$('.container-fluid:eq(1)').prepend('<div class="alert alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

											setTimeout(function() {
													location.reload();
												},
												2000
											);
										}

										$('html, body').animate({ scrollTop: 0 }, 'slow');
									},
									error: function (jqXHR, textStatus, errorThrown) {
										console.log(textStatus);
									}
								} );

								$('#assignment-cn-to-order').modal('hide');
							}
						}

						$(function() {
							var post_data = 'selected[]=<?php echo $order_id; ?>';

							$.ajax( {
								url: 'index.php?route=sale/order/getShippingData&token=<?php echo $token; ?>',
								type: 'POST',
								data: post_data,
								dataType: 'json',
								success: function(json) {
									if(json['error']) {
										$('.container-fluid:eq(1)').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

										$('html, body').animate({ scrollTop: 0 }, 'slow');
									}

									if (json instanceof Object) {
										for (var i in json['orders']) {
											var
												c       = 0,
												f       = false,
												b_class = '',
												btn_o   = '<div class="btn-group"><button type="button" id="button-cn" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-file-text-o" aria-hidden="true"></i> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right">';

											btn_o += '<li class="dropdown-header">' + json['heading_cn'] + '</li>';
											btn_o += '<li role="separator" class="divider"></li>';

											for (var ii in json['orders'][i]) {
												c++;

												btn_o += '<li class="dropdown-header">' + json['shipping_methods'][ii]['heading'] + '</li>';

												if (json['orders'][i][ii]['create']) {
													btn_o += '<li><a href="' + json['orders'][i][ii]['create']['href'] + '">' + json['orders'][i][ii]['create']['text'] + '</a></li>';
												}

												if (json['orders'][i][ii]['edit']) {
													f = true;
													btn_o += '<li><a href="' + json['orders'][i][ii]['edit']['href'] + '">' + json['orders'][i][ii]['edit']['text'] + '</a></li>';
												}

												if (json['orders'][i][ii]['delete']) {
													f = true;
													btn_o += '<li><a style="cursor: pointer;" onclick="deleteCN(\'' + ii + '\');">' + json['orders'][i][ii]['delete']['text'] + '</a></li>';
												}

												if (json['orders'][i][ii]['assignment']) {
													btn_o += '<li><a style="cursor: pointer;" onclick="assignmentCN(\'' + ii + '\');">' + json['orders'][i][ii]['assignment']['text'] + '</a></li>';
												}

												btn_o += '<li role="separator" class="divider"></li>';

												if (f) {
													b_class = 'btn-' + ii;

													continue;
												} else {
													b_class = 'btn-light-' + ii;
												}
											}

											btn_o += '</ul></div> ';

											$('div.container-fluid div.pull-right:last').prepend(btn_o);

											if (c != 1) {
												if (f) {
													b_class = 'btn-info';
												} else {
													b_class = 'btn-default';
												}
											}

											$('div.container-fluid div.pull-right #button-cn').addClass(b_class);
										}
									}
								},
								error: function (jqXHR, textStatus, errorThrown) {
									console.log(textStatus);
								}
							} );
						} );
					//--></script>
					<!-- END Shipping Data -->
				]]></add>
			</operation>
		</file>
  
	</modification>